#Targeted spells for the AI. No need for localisation or TTs here!

targeted_decisions = {

	spell_lesser_restoration_ai = {
		ai_check_interval = 12
		filter = none #player has their own version
		ai_target_filter = sub_realm_including_me #this is the more common spell and the evaluation takes longers, so it's filtered more tightly
		
		#AI doesn't need to know that one day it can use this effect, so evaluate cheaply
		#Note that in some rare cases ai characters who are eligible to use this effect will spend the "wrong" spell points. 
		#Just don't tell the players and everything will be fine.
		from_potential = {
			#most efficient way to narrow the pool of eligible characters
			OR = {
				check_variable = {
					which = clespellpoints
					value = 10
				}
				check_variable = {
					which = druidspellpoints
					value = 10
				}
				check_variable = {
					which = sorcspellpoints
					value = 10
				}
				check_variable = {
					which = wizspellpoints
					value = 10
				}
			}
			#evaluation order is lower level (more common?) first, then look for abjurers and divine souls
			OR = {
				trait = journeyman_cleric
				trait = journeyman_druid
				trait = expert_cleric
				trait = expert_druid
				trait = master_cleric
				trait = master_druid
				trait = renowned_cleric
				trait = renowned_druid
				trait = legendary_cleric
				trait = legendary_druid
				AND = {
					OR = {
						has_character_modifier = wiz_abjuration
						has_character_flag = knows_spell_remove_disease
					}
					OR = {
						trait = journeyman_wizard
						trait = expert_wizard
						trait = master_wizard
						trait = renowned_wizard
						trait = legendary_wizard
					}
				}
				AND = {
					trait = origin_divine_soul
					OR = {
						trait = journeyman_sorcerer
						trait = expert_sorcerer
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
			}
			NOT = { has_character_modifier = burn_path_mod }
			#the player gets to use the prettier versions
			ai = yes
		}
		
		potential = {
			health <= 3 #this means unhealthy characters get evaluated for healing, but it is cheaper to evaluate
			OR = {
				trait = ill
				trait = sickly
				character_disease_trigger = yes
			}
			NOR = {
				trait = incapable
				trait = sick_incapable
			}
		}
		
		allow = {
			#always = yes #don't think this is necessary
		}

		effect = {
			# Don't worry about cooldown because the ai already has check intervals
			#FROM = { 
			#	set_character_flag = spell_remove_disease_cooldown 
			#}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = FROM }
					}
					opinion = {
						modifier = cured_me
						who = FROM
						years = 5
					}
					if = {
						limit = {
							ai = no
						}
						repeat_event = { id = spellaux.7 }
					}
				}
			}
			custom_tooltip = {
				text = ONEDISEASECURED
				hidden_tooltip = {
					remove_trait = sickly
					remove_character_modifier = mild_illness
					remove_character_modifier = severe_illness
					remove_character_modifier = bedridden_illness
					if = {
						limit = {
							NOT = { has_dlc = "Reapers" }
						}
						remove_trait = ill
					}
					else_if = {
						limit = {
							has_dlc = "Reapers"
						}
						random_list = {
							40 = {
								modifier = {
									NOT = { trait = flu }
									factor = 0
								}
								remove_trait = flu
								clr_character_flag = manifest_flu
							}
							20 = {
								modifier = {
									NOT = { trait = dysentery }
									factor = 0
								}
								remove_trait = dysentery
							}
							10 = {
								modifier = {
									NOT = { trait = rabies }
									factor = 0
								}
								remove_trait = rabies
							}
							20 = {
								modifier = {
									NOT = { trait = has_measles }
									factor = 0
								}
								remove_trait = has_measles
							}
							40 = {
								modifier = {
									NOT = {
										trait = food_poisoning
									}
									factor = 0
								}
								remove_trait = food_poisoning
							}
							20 = {
								modifier = {
									NOT = { trait = gout }
									factor = 0
								}
								remove_trait = gout
							}
							40 = {
								modifier = {
									NOT = { trait = scurvy }
									factor = 0
								}
								remove_trait = scurvy
							}
							20 = {
								modifier = {
									NOT = { trait = lovers_pox }
									factor = 0
								}
								remove_trait = lovers_pox
							}
							5 = {
								modifier = {
									NOT = { trait = cancer }
									factor = 0
								}
								remove_trait = cancer
							}
							10 = {
								modifier = {
									NOT = { trait = pneumonic }
									factor = 0
								}
								remove_trait = pneumonic
							}
							10 = {
								modifier = {
									NOT = { trait = syphilitic }
									factor = 0
								}
								remove_trait = syphilitic
							}
							5 = {
								modifier = {
									NOT = { trait = leper }
									factor = 0
								}
								remove_trait = leper
							}
							10 = {
								modifier = {
									NOT = { trait = has_tuberculosis}
									factor = 0
								}
								remove_trait = has_tuberculosis
							}
							10 = {
								modifier = {
									NOT = { trait = has_aztec_disease}
									factor = 0
								}
								remove_trait = has_aztec_disease
							}
							10 = {
								modifier = {
									NOT = { trait = has_small_pox}
									factor = 0
								}
								remove_trait = has_small_pox
							}
							10 = {
								modifier = {
									NOT = { trait = has_bubonic_plague}
									factor = 0
								}
								remove_trait = has_bubonic_plague
							}
							10 = {
								modifier = {
									NOT = { trait = has_typhus}
									factor = 0
								}
								remove_trait = has_typhus
							}
							10 = {
								modifier = {
									NOT = { trait = has_typhoid_fever}
									factor = 0
								}
								remove_trait = has_typhoid_fever
							}
						}
					}
				}
			}
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = clespellpoints
							value = 10
						}
					}
					change_variable = { 
						which = clespellpoints 
						value = -10 
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 10
						}
					}
					change_variable = {
						which = druidspellpoints
						value = -10
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = wizspellpoints
							value = 10
						}
					}
					change_variable = {
						which = wizspellpoints
						value = -10
					}
				}
				#we already checked to see if the character had 10 cleric, druid, or wizard spellpoints. If they don't have cleric, druid, or wizard, they have sorc.
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -10
					}				
				} 
			}
		}
		ai_will_do = {
			factor = 0.3
			modifier = {
				factor = 100
				character = ROOT
			}
			modifier = {
				factor = 0
				is_foe = ROOT
			}
			modifier = {
				factor = 10
				trait = kind
			}
			modifier = {
				factor = 10
				is_friend = ROOT
			}
			modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_greater_restoration_ai = {
		ai_check_interval = 12
		filter = none #player has their own version
		ai_target_filter = realm_including_me #there aren't many characters who can do this, so it's acceptable to have a wider filter

		from_potential = {
			OR = {
				check_variable = {
					which = clespellpoints
					value = 15
				}
				check_variable = {
					which = druidspellpoints
					value = 15
				}
				check_variable = {
					which = sorcspellpoints
					value = 15
				}
			}
			OR = {
				trait = master_cleric
				trait = master_druid
				trait = renowned_cleric
				trait = renowned_druid
				trait = legendary_cleric
				trait = legendary_druid

				AND = {
					trait = origin_divine_soul
					OR = {
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
			}
			#the player gets to use the prettier versions
			NOT = { has_character_modifier = burn_path_mod }
			ai = yes
		}
		potential = {
			health <= 1.5 #this means only very unhealthy characters get evaluated for greater restoration
			OR = {
				trait = ill
				trait = sickly
				character_disease_trigger = yes
			}
		}
		allow = {
			#always = yes #don't think this is necessary
		}
		effect = {
			#FROM = { set_character_flag = spell_remove_disease_cooldown }
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = clespellpoints
							value = 15
						}
					}
					change_variable = { 
						which = clespellpoints 
						value = -15 
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 15
						}
					}
					change_variable = {
						which = druidspellpoints
						value = -15
					}
				}
				#same logic as before
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -15
					}				
				} 
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = FROM }
					}
					opinion = {
						modifier = cured_me
						who = FROM
						years = 5
					}
					if = {
						limit = {
							ai = no
						}
						repeat_event = { id = spellaux.7 }
					}
				}
				else_if = {
					limit = {
						ai = no
						character = FROM
					}
					character_event = { id = spellaux.8 }
				}
			}
			custom_tooltip = {
				text = ALLDISEASECURED
				hidden_tooltip = {
					remove_trait = sickly
					if = {
						limit = {
							NOT = { has_dlc = "Reapers" }
						}
						remove_trait = ill
					}
					else_if = {
						limit = {
							has_dlc = "Reapers"
						}
						#Greater restoration clears every disease
						remove_trait = flu
						remove_trait = dysentery
						remove_trait = rabies
						remove_trait = has_measles
						remove_trait = food_poisoning
						remove_trait = gout
						remove_trait = scurvy
						remove_trait = lovers_pox
						remove_trait = cancer
						remove_trait = pneumonic
						remove_trait = syphilitic
						remove_trait = leper
						remove_trait = has_tuberculosis
						remove_trait = has_aztec_disease
						remove_trait = has_small_pox
						remove_trait = has_bubonic_plague
						remove_trait = has_typhus
						remove_trait = has_typhoid_fever
						#We also remove any symptoms even if they haven't developed into disease yet
						remove_trait = abdominal_pain
						remove_trait = chest_pain
						remove_trait = cough
						remove_trait = cramps
						remove_trait = diarrhea
						remove_trait = fatigue
						remove_trait = fever
						remove_trait = headache
						remove_trait = infection
						remove_trait = malaise
						remove_trait = rash
						remove_trait = vomiting
						#also clear the flags so they don't keep getting sick
						clr_character_flag = developing_illness
						clr_character_flag = got_flu
						clr_character_flag = manifest_flu
						remove_character_modifier = mild_illness
						remove_character_modifier = severe_illness
						remove_character_modifier = bedridden_illness
						#lastly remove incapable
						remove_trait = incapable
						remove_trait = sick_incapable
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			modifier = {
				factor = 100
				character = ROOT
			}
			modifier = {
				factor = 0
				is_foe = ROOT
			}
			modifier = {
				factor = 10
				trait = kind
			}
			modifier = {
				factor = 10
				is_friend = ROOT
			}
			modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
			modifier = {
				factor = 0.01
				trait = patron_talona
			}
		}
	}

	spell_heal_ai = {
		ai_check_interval = 12
		filter = none
		ai_target_filter = realm_including_me

		from_potential = {
			OR = {
				check_variable = {
					which = clespellpoints
					value = 15
				}
				check_variable = {
					which = druidspellpoints
					value = 15
				}
				check_variable = {
					which = sorcspellpoints
					value = 15
				}
			}
			OR = {
				trait = expert_cleric
				trait = expert_druid
				trait = master_cleric
				trait = master_druid
				trait = renowned_cleric
				trait = renowned_druid
				trait = legendary_cleric
				trait = legendary_druid
				AND = {
					trait = origin_divine_soul
					OR = {
						trait = expert_sorcerer
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
			}
			NOT = { has_character_modifier = burn_path_mod }
			#the player gets to use the prettier versions
			ai = yes
		}
		potential = {
			health <= 3
			OR = {
				trait = wounded
				trait = severely_injured
				trait = mangled
			}
		}
		allow = {

		}
		effect = {
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = clespellpoints
							value = 15
						}
					}
					change_variable = { 
						which = clespellpoints 
						value = -15 
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 15
						}
					}
					change_variable = {
						which = druidspellpoints
						value = -15
					}
				}
				#same logic as before
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -15
					}				
				} 
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = FROM }
					}
					opinion = {
						modifier = cured_me
						who = FROM
						years = 5
					}
					if = {
						limit = {
							ai = no
						}
						repeat_event = { id = spellaux.7 }
					}
				}
				else_if = {
					limit = {
						ai = no
						character = FROM
					}
					character_event = { id = spellaux.8 }
				}
			}
			custom_tooltip = {
				text = ALLINJURIESCURED
				hidden_tooltip = {
					remove_trait = wounded
					remove_trait = mangled
					remove_trait = severely_injured
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			modifier = {
				factor = 100
				character = ROOT
			}
			modifier = {
				factor = 0
				is_foe = ROOT
			}
			modifier = {
				factor = 10
				trait = kind
			}
			modifier = {
				factor = 10
				is_friend = ROOT
			}
			modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}

		}
	}

	spell_regenerate_ai = {
		ai_check_interval = 12
		filter = none
		ai_target_filter = realm_including_me

		from_potential = {
			OR = {
				check_variable = {
					which = clespellpoints
					value = 30
				}
				check_variable = {
					which = druidspellpoints
					value = 30
				}
				check_variable = {
					which = sorcspellpoints
					value = 30
				}
			}
			OR = {
				trait = renowned_cleric
				trait = renowned_druid
				trait = legendary_cleric
				trait = legendary_druid

				AND = {
					trait = origin_divine_soul
					OR = {
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
			}
			#the player gets to use the prettier versions
			NOT = { has_character_modifier = burn_path_mod }
			ai = yes
		}
		potential = {
			OR = {
				trait = wounded
				trait = mangled
				trait = severely_injured
				trait = disfigured
				trait = one_eyed
				trait = one_handed
				trait = one_legged
			}
		}
		allow = {

		}
		effect = {
			#FROM = { set_character_flag = spell_healing_cooldown }
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = clespellpoints
							value = 30
						}
					}
					change_variable = { 
						which = clespellpoints 
						value = -30
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 30
						}
					}
					change_variable = {
						which = druidspellpoints
						value = -30
					}
				}
				#same logic as before
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -30
					}				
				} 
			}
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = FROM }
					}
					opinion = {
						modifier = cured_me
						who = FROM
						years = 5
					}
					if = {
						limit = {
							ai = no
						}
						repeat_event = { id = spellaux.7 }
					}
				}
				else_if = {
					limit = {
						ai = no
						character = FROM
					}
					character_event = { id = spellaux.8 }
				}
			}
			custom_tooltip = {
				text = ALLREGENERATED
				hidden_tooltip = {
					remove_trait = wounded
					remove_trait = mangled
					remove_trait = severely_injured
					remove_trait = one_eyed
					remove_trait = disfigured
					remove_trait = one_legged
					remove_trait = one_handed
				}
			}
		}
		ai_will_do = {
			factor = 0.3
			modifier = {
				factor = 100
				character = ROOT
			}
			modifier = {
				factor = 0
				is_foe = ROOT
			}
			modifier = {
				factor = 10
				trait = kind
			}
			modifier = {
				factor = 10
				is_friend = ROOT
			}
			modifier = {
				factor = 10
				opinion = {
					who = ROOT
					value = 50
				}
			}
			modifier = {
				factor = 0.5
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = slothful
			}
			modifier = {
				factor = 0.1
				OR = {
					trait = cruel
					trait = impaler
				}
			}
		}
	}

}



settlement_decisions = {

	spell_blight_ai = {
		only_rulers = yes
		ai_check_interval = 24
		filter = none
		ai_target_filter = all

		from_potential = {
			OR = {
				check_variable = {
					which = wizspellpoints
					value = 20
				}
				check_variable = {
					which = druidspellpoints
					value = 20
				}
				check_variable = {
					which = sorcspellpoints
					value = 20
				}
			}
			OR = {
				trait = master_druid
				trait = renowned_druid
				trait = legendary_druid
				AND = {
					trait = origin_shadow
					OR = {
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
				AND = {
					OR = {
						has_character_modifier = wiz_necromancy
						has_character_flag = knows_spell_blight
					}
					OR = {
						trait = master_wizard
						trait = renowned_wizard
						trait = legendary_wizard
					}
				}
			}
			NOT = { has_character_modifier = burn_path_mod }
			ai = yes #player gets a prettier version
		}
		potential = {
			location = { NOT = { has_disease = yes } }
			OR = {
				location = {
					any_neighbor_province = {
						holder_scope = { same_realm = FROM }
					}
				}
				location = {
					FROM = {
						at_location = PREV
					}
				}
			}
		}
		allow = {
			FROM = {
				custom_tooltip = {
					text = HAS20SPELLPOINTS
					hidden_tooltip = {
						check_variable = { which = druidspellpoints value = 20 }
					}
				}
				custom_tooltip = {
					text = MASTERDRUIDHIGHER
					hidden_tooltip = {
						OR = {
							trait = master_druid
							trait = renowned_druid
							trait = legendary_druid
						}
					}
				}
				custom_tooltip = {
					text = SPELL_ON_COOLDOWN
					hidden_tooltip = {
						OR = {
							NOT = { has_character_flag = spell_blight_cooldown }
							had_character_flag = { flag = spell_blight_cooldown months = 1 }
						}
					}
				}
				#NOT = { has_character_modifier = burn_path_mod }
			}
			OR = {
				location = { holder_scope = { is_foe = FROM } }
				location = {
					holder_scope = {
						reverse_opinion = {
							who = FROM
							value <= -50
						}
					}
				}
			}
		}
		effect = {
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 20
						}
					}
					change_variable = { 
						which = druidspellpoints 
						value = -20
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = wizspellpoints
							value = 20
						}
					}
					change_variable = {
						which = wizspellpoints
						value = -20
					}
				}
				#same logic as before
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -20
					}				
				} 
			}
			hidden_tooltip = {
				if = {
					limit = {
						location = {
							holder_scope = {
								ai = no
							}
						}
					}
					location = {
						holder_scope = {
							opinion = {
								modifier = cast_spell_on_me
								who = FROM
								years = 1
							}
							repeat_event = { id = spellaux.39 }
						}
					}
				}
			}
			location = {
				random_list = {
					1 = {
						spawn_disease = tuberculosis
					}
					1 = {
						spawn_disease = typhoid_fever
					}
					1 = {
						spawn_disease = typhus
					}
					1 = {
						spawn_disease = measles
					}
					1 = {
						spawn_disease = small_pox
					}
					1 = {
						spawn_disease = syphilis
					}
				}
			}
		}
		ai_will_do = {
			factor = 0.05
			modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			modifier = {
				factor = 0.3
				FROM = { trait = charitable }
			}
			modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			modifier = {
				factor = 2
				FROM = { trait = envious }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			modifier = {
				factor = 10
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			modifier = {
				factor = 10
				FROM = { trait = patron_talona }
			}
		}
	}

	spell_controlweather_ai = {
		ai_check_interval = 24
		filter = all
		ai_target_filter = all
		only_playable = yes #was only_rulers but I don't think barons really need this option

		from_potential = {
			OR = {
				check_variable = {
					which = wizspellpoints
					value = 20
				}
				check_variable = {
					which = druidspellpoints
					value = 20
				}
				check_variable = {
					which = sorcspellpoints
					value = 20
				}
			}
			OR = {
				trait = master_druid
				trait = renowned_druid
				trait = legendary_druid
				AND = {
					trait = origin_shadow
					OR = {
						trait = master_sorcerer
						trait = renowned_sorcerer
						trait = legendary_sorcerer
					}
				}
				AND = {
					OR = {
						has_character_modifier = wiz_necromancy
						has_character_flag = knows_spell_blight
					}
					OR = {
						trait = master_wizard
						trait = renowned_wizard
						trait = legendary_wizard
					}
				}
			}
			NOT = { has_character_modifier = burn_path_mod }
			ai = yes #player gets a prettier version
		}
		potential = {
			OR = {
				location = {
					any_neighbor_province = {
						holder_scope = { same_realm = FROM }
					}
				}
				#Own provinces will usually neighbor a realm province
				#location = {
				#	holder_scope = {
				#		character = FROM
				#	}
				#}
				location = {
					FROM = {
						at_location = PREV
					}
				}
			}
		}
		allow = {
			OR = {
				location = {
					holder_scope = {
						reverse_opinion = {
							who = FROM
							value <= -40
						}
					}
				}
				location = { holder_scope = { is_foe = FROM } }
				location = {
					holder_scope = {
						character = FROM
					}
				}
			}
		}
		effect = {
			FROM = { 
				if = {
					limit = {
						check_variable = {
							which = druidspellpoints
							value = 20
						}
					}
					change_variable = { 
						which = druidspellpoints 
						value = -20
					}
				}
				else_if = {
					limit = {
						check_variable = {
							which = wizspellpoints
							value = 20
						}
					}
					change_variable = {
						which = wizspellpoints
						value = -20
					}
				}
				#same logic as before
				else = {
					change_variable = {
						which = sorcspellpoints
						value = -20
					}				
				} 
			}
			hidden_tooltip = {
				FROM = {
					if = {
						limit = {
							has_character_modifier = wiz_wild
						}
						random = {
							chance = 15
							character_event = { id = spellaux.4 }
							break = yes
						}
					}
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						location = {
							holder_scope = {
								ai = no
							}
						}
					}
					location = {
						holder_scope = {
							opinion = {
								modifier = cast_spell_on_me
								who = FROM
								years = 1
							}
							repeat_event = { id = spellaux.41 }
						}
					}
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						location = {
							holder_scope = {
								NOT = {
									character = FROM
								}
							}
						}
					}
					#Insert Control Weather CB here
				}
			}
			location = {
				if = {
					limit = {
						location = {
							holder_scope = {
								character = FROM
							}
						}
					}
					add_province_modifier = {
						name = africa_light_rain
						months = 12
					}
                }
				if = {
					limit = {
						location = {
							holder_scope = {
								NOT = {
									character = FROM
								}
							}
						}
					}
					random_list = {
						1 = {
							add_province_modifier = {
								name = africa_heavy_rain
								months = 3
							}
						}
						1 = {
							add_province_modifier = {
								name = africa_drought_risk
								months = 12
							}
						}
						1 = {
							add_province_modifier = {
								name = africa_drought
								months = 6
							}
						}
					}
				}


			}
			any_neighbor_independent_ruler = {
				any_realm_province = {
					random_list = {
						1 = {
							add_province_modifier = {
								name = africa_heavy_rain
								months = 3
							}
						}
						1 = {
							add_province_modifier = {
								name = africa_drought_risk
								months = 12
							}
						}
						1 = {
							add_province_modifier = {
								name = africa_drought
								months = 6
							}
						}
					}
				}
				#Insert Control Weather CB here

			}
			random = {
				chance = 50
				any_neighbor_independent_ruler = {
					any_realm_province = {
						random_list = {
							1 = {
								add_province_modifier = {
									name = africa_heavy_rain
									months = 3
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought_risk
									months = 12
								}
							}
							1 = {
								add_province_modifier = {
									name = africa_drought
									months = 6
								}
							}
						}
					}
					#Insert Control Weather CB here
				}
			}


		}
		ai_will_do = {
			factor = 0.3
			modifier = {
				factor = 10
				location = {
					holder_scope = {
						is_foe = FROM
					}
				}
			}
			modifier = {
				factor = 0.1
				FROM = { trait = kind }
			}
			modifier = {
				factor = 0
				location = {
					holder_scope = {
						is_friend = FROM
					}
				}
			}
			modifier = {
				factor = 10
				location = {
					holder_scope = {
						opinion = {
							who = FROM
							value = 50
						}
					}
				}
			}
			modifier = {
				factor = 2
				FROM = { trait = envious }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = slothful }
			}
			modifier = {
				factor = 10
				FROM = {
					OR = {
						trait = cruel
						trait = impaler
					}
				}
			}
			modifier = {
				factor = 20
				FROM = { trait = patron_talos }
			}
			modifier = {
				factor = 20
				FROM = { trait = patron_umberlee }
			}
			modifier = {
				factor = 3
				FROM = { culture = shadovar } #Shadovar canonically caused a war with Cormyr through use of weather manipulation
			}
			modifier = {
				factor = 10
				FROM = { culture = thayan } #Thay is pretty notorious canonically for doing this, and dgaf about neighbors caring
			}
		}
	}

}